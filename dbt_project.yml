# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "cc_bigquery_datawarehouse"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "cc_bigquery_datawarehouse"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  cc_bigquery_datawarehouse:
    staging:
      +schema: "{{ target.dataset }}_staging"
      +materialized: view
      reference:
        +materialized: table
    business_vault:
      +materialized: table
      cc:
        +schema: "{{ target.dataset }}_business_vault"
      rastellis:
        +schema: "{{ target.dataset }}_rastellis"
    marts:
      +materialized: table
      +schema: "{{ target.dataset }}_datawarehouse"
      cargill:
        +materialized: view
        +schema: "{{ target.dataset }}_cargill"
      fountain9:
        +materialized: view
        +schema: "{{ target.dataset }}_fountain9"

tests:
  +store_failures: true
